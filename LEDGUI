import tkinter as tk
from tkinter import font, messagebox
class LED():
    def __init__(self,int_):
        pass
    def on(self):
        pass
    def off(self):
         pass
led = LED(17)
app = tk.Tk()
app.title("LED app")
app.geometry("400x250")

def on_button_(event=None): #ON
    if loop.get():
        messagebox.showerror("Loop","Loop is turned on!",detail='Turn off loop for manual mode.')
        return
    led.on()
    print("manual: led turned on >>>")
    ledstatus_label.configure(fg="green",text="MANUAL: OFF")
def off_button_(event=None): #OFF
    if loop.get():
        messagebox.showerror("Loop","Loop is turned on!",detail='Turn off loop for manual mode.')
        return
    led.off()
    print("manual: led turned off <<<")
    ledstatus_label.configure(fg="red",text="MANUAL: OFF")


def loop_toggle(event=None):
    if loop.get():
        led.off()
        print("loop: led turned off <<<")
        ledstatus_label.configure(fg="light blue", text="LOOP: OFF")
        wait = loopwait.get() * 100
        app.after(wait, loop_on)
    else:
        off_button_()

def loop_on():
    if loop.get():
        led.on()
        print("loop: led turned on >>>")
        ledstatus_label.configure(fg="blue", text="LOOP: ON")
        wait = loopwait.get() * 100
        app.after(wait, loop_toggle)

loop = tk.BooleanVar(value=False)
loopwait = tk.IntVar(value=10)
ledstatus_label = tk.Label(text='',fg='red',font=font.Font(size=30))
off_button_()
ledstatus_label.pack(side='top',fill=tk.X)
on_button = tk.Button(text='LED ON',command=on_button_)
on_button.pack(side="top",pady=10)
off_button = tk.Button(text='LED OFF',command=off_button_)
off_button.pack(side="top",pady=10)
loopframe = tk.Frame(app)
loopframe.pack()
loopscale = tk.Scale(loopframe,orient=tk.HORIZONTAL,from_=10,to=50,showvalue=True,variable=loopwait)
loopscale.pack(side='left')
loopbutton = tk.Checkbutton(loopframe, command=loop_toggle, variable=loop)
loopbutton.pack(side='right')

app.mainloop()
